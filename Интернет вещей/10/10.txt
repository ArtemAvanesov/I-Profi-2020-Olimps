# Для метеорологических исследований используется специальная переносная система сбора данных с датчика
# температуры. В этой системе имеется аналоговый датчик температуры LM35, который имеет следующую спецификацию:
# напряжение питания: от 2.7В до 5.5В;
# разрешение: 10 мВ/?C;
# точность: ± 0.5?C;
# диапазон измерений: -55?C to +150?C (макс. +150?C);
# потребляемый ток: менее 50 мкА.
# На выходе датчика формируется напряжение пропорционально температуре по шкале Цельсия, величина
# напряжения 10.0 mV на 1?C. При подключении датчика для повышения точности измерений используется
# встроенное опорное напряжение 1.1 В. 
# При этом сама система выдает на выход количество измерений и последовательно по два показания для
# дальнейшего анализа T – показания датчика температуры, S – расстояние от точки измерения до базовой
# станции в метрах. Метеоролог снимает несколько показаний в разных точках и нажимает кнопку
# “Проанализировать данные”. 
# Напишите программу, которая будет принимать показания датчика температуры и преобразовывать
# представление этих показаний в виде градусов Цельсия, а в заключении выводить среднюю температуру
# в точках на расстоянии Sk<N/2 от базовой станции и N – расстояние от самой удаленной точки измерения
# от базовой станции. Точность вывода всех показаний температуры – до 2-го знака после запятой
# (вещественное число), для среднего значения температуры на расстоянии N/2 – до 3-го знака после
# запятой (вещественное число), N – целое число. 
# В качестве ответа загрузите исходный программный код.
# Пример 1
# Ввод	
# 4
# 143.00
# 1
# 110.00
# 5
# 80.00 
# 10
# 70.00 
# 15
# Вывод
# 15.89 12.22 8.89 7.78 14.056 15
# Пример 2
# Ввод	
# 6
# 113.00
# 23
# 192.00 
# 20
# 450.00 
# 1
# 370.00 
# 3
# 150.00
# 15
# 199.00
# 17
# Вывод
# 12.56 21.33 50.00 41.11 16.67 22.11 45.556 23

f=open("input.txt")
stroka=f.read().split("\n")
f.close()

num = stroka[0]
stroka = stroka[1:len(stroka)]

temper = []
distan = []

for i in range(int(num)*2):
    if((i+1)%2==0):
        distan.append(float(stroka[i]))
    else: temper.append(float(stroka[i]))

ans_temp = [x * 0.11111888111888 for x in temper] 
max_d = max(distan)/2

sum = 0
n = 0
for i in range(int(num)):
    if(distan[i]<max_d):
        sum += ans_temp[i]
        n +=1 

f=open("output.txt",'w')
f.write(" ".join("{:.2f}".format(i) for i in ans_temp))
f.write(" " + "{:.3f}".format(sum/n) + " " + str(max(distan))) 
f.close()
print("Done!")